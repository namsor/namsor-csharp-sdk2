/* 
 * NamSor API v2
 *
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * OpenAPI spec version: 2.0.4
 * Contact: contact@namsor.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.com.namsor.sdk2.api;
using Org.OpenAPITools.com.namsor.sdk2.model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing UserInfoOut
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class UserInfoOutTests
    {
        // TODO uncomment below to declare an instance variable for UserInfoOut
        //private UserInfoOut instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of UserInfoOut
            //instance = new UserInfoOut();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UserInfoOut
        /// </summary>
        [Test]
        public void UserInfoOutInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" UserInfoOut
            //Assert.IsInstanceOfType<UserInfoOut> (instance, "variable 'instance' is a UserInfoOut");
        }


        /// <summary>
        /// Test the property 'Uid'
        /// </summary>
        [Test]
        public void UidTest()
        {
            // TODO unit test for the property 'Uid'
        }
        /// <summary>
        /// Test the property 'Email'
        /// </summary>
        [Test]
        public void EmailTest()
        {
            // TODO unit test for the property 'Email'
        }
        /// <summary>
        /// Test the property 'PhoneNumber'
        /// </summary>
        [Test]
        public void PhoneNumberTest()
        {
            // TODO unit test for the property 'PhoneNumber'
        }
        /// <summary>
        /// Test the property 'EmailVerified'
        /// </summary>
        [Test]
        public void EmailVerifiedTest()
        {
            // TODO unit test for the property 'EmailVerified'
        }
        /// <summary>
        /// Test the property 'DisplayName'
        /// </summary>
        [Test]
        public void DisplayNameTest()
        {
            // TODO unit test for the property 'DisplayName'
        }
        /// <summary>
        /// Test the property 'PhotoUrl'
        /// </summary>
        [Test]
        public void PhotoUrlTest()
        {
            // TODO unit test for the property 'PhotoUrl'
        }
        /// <summary>
        /// Test the property 'Disabled'
        /// </summary>
        [Test]
        public void DisabledTest()
        {
            // TODO unit test for the property 'Disabled'
        }
        /// <summary>
        /// Test the property 'FirstKnownIpAddress'
        /// </summary>
        [Test]
        public void FirstKnownIpAddressTest()
        {
            // TODO unit test for the property 'FirstKnownIpAddress'
        }
        /// <summary>
        /// Test the property 'ProviderId'
        /// </summary>
        [Test]
        public void ProviderIdTest()
        {
            // TODO unit test for the property 'ProviderId'
        }
        /// <summary>
        /// Test the property 'TimeStamp'
        /// </summary>
        [Test]
        public void TimeStampTest()
        {
            // TODO unit test for the property 'TimeStamp'
        }
        /// <summary>
        /// Test the property 'VerifyToken'
        /// </summary>
        [Test]
        public void VerifyTokenTest()
        {
            // TODO unit test for the property 'VerifyToken'
        }
        /// <summary>
        /// Test the property 'ApiKey'
        /// </summary>
        [Test]
        public void ApiKeyTest()
        {
            // TODO unit test for the property 'ApiKey'
        }
        /// <summary>
        /// Test the property 'StripePerishableKey'
        /// </summary>
        [Test]
        public void StripePerishableKeyTest()
        {
            // TODO unit test for the property 'StripePerishableKey'
        }
        /// <summary>
        /// Test the property 'StripeCustomerId'
        /// </summary>
        [Test]
        public void StripeCustomerIdTest()
        {
            // TODO unit test for the property 'StripeCustomerId'
        }
        /// <summary>
        /// Test the property 'OtherInfos'
        /// </summary>
        [Test]
        public void OtherInfosTest()
        {
            // TODO unit test for the property 'OtherInfos'
        }

    }

}
