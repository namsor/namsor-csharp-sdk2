/* 
 * NamSor API v2
 *
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * OpenAPI spec version: 2.0.11
 * Contact: contact@namsor.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.com.namsor.sdk2.api;
using Org.OpenAPITools.com.namsor.sdk2.model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing BillingInfoInOut
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class BillingInfoInOutTests
    {
        // TODO uncomment below to declare an instance variable for BillingInfoInOut
        //private BillingInfoInOut instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of BillingInfoInOut
            //instance = new BillingInfoInOut();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BillingInfoInOut
        /// </summary>
        [Test]
        public void BillingInfoInOutInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" BillingInfoInOut
            //Assert.IsInstanceOfType<BillingInfoInOut> (instance, "variable 'instance' is a BillingInfoInOut");
        }


        /// <summary>
        /// Test the property 'BillingEmail'
        /// </summary>
        [Test]
        public void BillingEmailTest()
        {
            // TODO unit test for the property 'BillingEmail'
        }
        /// <summary>
        /// Test the property 'PreferredCurrency'
        /// </summary>
        [Test]
        public void PreferredCurrencyTest()
        {
            // TODO unit test for the property 'PreferredCurrency'
        }
        /// <summary>
        /// Test the property 'CustomerName'
        /// </summary>
        [Test]
        public void CustomerNameTest()
        {
            // TODO unit test for the property 'CustomerName'
        }
        /// <summary>
        /// Test the property 'CustomerPhone'
        /// </summary>
        [Test]
        public void CustomerPhoneTest()
        {
            // TODO unit test for the property 'CustomerPhone'
        }
        /// <summary>
        /// Test the property 'AddressLine1'
        /// </summary>
        [Test]
        public void AddressLine1Test()
        {
            // TODO unit test for the property 'AddressLine1'
        }
        /// <summary>
        /// Test the property 'AddressLine2'
        /// </summary>
        [Test]
        public void AddressLine2Test()
        {
            // TODO unit test for the property 'AddressLine2'
        }
        /// <summary>
        /// Test the property 'AddressCity'
        /// </summary>
        [Test]
        public void AddressCityTest()
        {
            // TODO unit test for the property 'AddressCity'
        }
        /// <summary>
        /// Test the property 'AddressPostalCode'
        /// </summary>
        [Test]
        public void AddressPostalCodeTest()
        {
            // TODO unit test for the property 'AddressPostalCode'
        }
        /// <summary>
        /// Test the property 'AddressState'
        /// </summary>
        [Test]
        public void AddressStateTest()
        {
            // TODO unit test for the property 'AddressState'
        }
        /// <summary>
        /// Test the property 'AddressCountry'
        /// </summary>
        [Test]
        public void AddressCountryTest()
        {
            // TODO unit test for the property 'AddressCountry'
        }
        /// <summary>
        /// Test the property 'VatID'
        /// </summary>
        [Test]
        public void VatIDTest()
        {
            // TODO unit test for the property 'VatID'
        }

    }

}
