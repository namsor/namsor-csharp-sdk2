/* 
 * NamSor API v2
 *
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * OpenAPI spec version: 2.0.11
 * Contact: contact@namsor.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.com.namsor.sdk2.api;
using Org.OpenAPITools.com.namsor.sdk2.model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing APIPlanSubscriptionOut
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class APIPlanSubscriptionOutTests
    {
        // TODO uncomment below to declare an instance variable for APIPlanSubscriptionOut
        //private APIPlanSubscriptionOut instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of APIPlanSubscriptionOut
            //instance = new APIPlanSubscriptionOut();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of APIPlanSubscriptionOut
        /// </summary>
        [Test]
        public void APIPlanSubscriptionOutInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" APIPlanSubscriptionOut
            //Assert.IsInstanceOfType<APIPlanSubscriptionOut> (instance, "variable 'instance' is a APIPlanSubscriptionOut");
        }


        /// <summary>
        /// Test the property 'ApiKey'
        /// </summary>
        [Test]
        public void ApiKeyTest()
        {
            // TODO unit test for the property 'ApiKey'
        }
        /// <summary>
        /// Test the property 'PlanStarted'
        /// </summary>
        [Test]
        public void PlanStartedTest()
        {
            // TODO unit test for the property 'PlanStarted'
        }
        /// <summary>
        /// Test the property 'PriorPlanStarted'
        /// </summary>
        [Test]
        public void PriorPlanStartedTest()
        {
            // TODO unit test for the property 'PriorPlanStarted'
        }
        /// <summary>
        /// Test the property 'PlanEnded'
        /// </summary>
        [Test]
        public void PlanEndedTest()
        {
            // TODO unit test for the property 'PlanEnded'
        }
        /// <summary>
        /// Test the property 'TaxRate'
        /// </summary>
        [Test]
        public void TaxRateTest()
        {
            // TODO unit test for the property 'TaxRate'
        }
        /// <summary>
        /// Test the property 'PlanName'
        /// </summary>
        [Test]
        public void PlanNameTest()
        {
            // TODO unit test for the property 'PlanName'
        }
        /// <summary>
        /// Test the property 'PlanBaseFeesKey'
        /// </summary>
        [Test]
        public void PlanBaseFeesKeyTest()
        {
            // TODO unit test for the property 'PlanBaseFeesKey'
        }
        /// <summary>
        /// Test the property 'PlanStatus'
        /// </summary>
        [Test]
        public void PlanStatusTest()
        {
            // TODO unit test for the property 'PlanStatus'
        }
        /// <summary>
        /// Test the property 'PlanQuota'
        /// </summary>
        [Test]
        public void PlanQuotaTest()
        {
            // TODO unit test for the property 'PlanQuota'
        }
        /// <summary>
        /// Test the property 'PriceUSD'
        /// </summary>
        [Test]
        public void PriceUSDTest()
        {
            // TODO unit test for the property 'PriceUSD'
        }
        /// <summary>
        /// Test the property 'PriceOverageUSD'
        /// </summary>
        [Test]
        public void PriceOverageUSDTest()
        {
            // TODO unit test for the property 'PriceOverageUSD'
        }
        /// <summary>
        /// Test the property 'Price'
        /// </summary>
        [Test]
        public void PriceTest()
        {
            // TODO unit test for the property 'Price'
        }
        /// <summary>
        /// Test the property 'PriceOverage'
        /// </summary>
        [Test]
        public void PriceOverageTest()
        {
            // TODO unit test for the property 'PriceOverage'
        }
        /// <summary>
        /// Test the property 'Currency'
        /// </summary>
        [Test]
        public void CurrencyTest()
        {
            // TODO unit test for the property 'Currency'
        }
        /// <summary>
        /// Test the property 'CurrencyFactor'
        /// </summary>
        [Test]
        public void CurrencyFactorTest()
        {
            // TODO unit test for the property 'CurrencyFactor'
        }
        /// <summary>
        /// Test the property 'StripeCustomerId'
        /// </summary>
        [Test]
        public void StripeCustomerIdTest()
        {
            // TODO unit test for the property 'StripeCustomerId'
        }
        /// <summary>
        /// Test the property 'StripeStatus'
        /// </summary>
        [Test]
        public void StripeStatusTest()
        {
            // TODO unit test for the property 'StripeStatus'
        }
        /// <summary>
        /// Test the property 'StripeSubscription'
        /// </summary>
        [Test]
        public void StripeSubscriptionTest()
        {
            // TODO unit test for the property 'StripeSubscription'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Test]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }

    }

}
