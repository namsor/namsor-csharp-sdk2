/* 
 * NamSor API v2
 *
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * OpenAPI spec version: 2.0.6
 * Contact: contact@namsor.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.com.namsor.sdk2.api;
using Org.OpenAPITools.com.namsor.sdk2.model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing APIKeyOut
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class APIKeyOutTests
    {
        // TODO uncomment below to declare an instance variable for APIKeyOut
        //private APIKeyOut instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of APIKeyOut
            //instance = new APIKeyOut();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of APIKeyOut
        /// </summary>
        [Test]
        public void APIKeyOutInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" APIKeyOut
            //Assert.IsInstanceOfType<APIKeyOut> (instance, "variable 'instance' is a APIKeyOut");
        }


        /// <summary>
        /// Test the property 'ApiKey'
        /// </summary>
        [Test]
        public void ApiKeyTest()
        {
            // TODO unit test for the property 'ApiKey'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Test]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'Admin'
        /// </summary>
        [Test]
        public void AdminTest()
        {
            // TODO unit test for the property 'Admin'
        }
        /// <summary>
        /// Test the property 'Vetted'
        /// </summary>
        [Test]
        public void VettedTest()
        {
            // TODO unit test for the property 'Vetted'
        }
        /// <summary>
        /// Test the property 'Learnable'
        /// </summary>
        [Test]
        public void LearnableTest()
        {
            // TODO unit test for the property 'Learnable'
        }
        /// <summary>
        /// Test the property 'Anonymized'
        /// </summary>
        [Test]
        public void AnonymizedTest()
        {
            // TODO unit test for the property 'Anonymized'
        }
        /// <summary>
        /// Test the property 'Partner'
        /// </summary>
        [Test]
        public void PartnerTest()
        {
            // TODO unit test for the property 'Partner'
        }
        /// <summary>
        /// Test the property 'Striped'
        /// </summary>
        [Test]
        public void StripedTest()
        {
            // TODO unit test for the property 'Striped'
        }
        /// <summary>
        /// Test the property 'Corporate'
        /// </summary>
        [Test]
        public void CorporateTest()
        {
            // TODO unit test for the property 'Corporate'
        }
        /// <summary>
        /// Test the property 'Disabled'
        /// </summary>
        [Test]
        public void DisabledTest()
        {
            // TODO unit test for the property 'Disabled'
        }

    }

}
